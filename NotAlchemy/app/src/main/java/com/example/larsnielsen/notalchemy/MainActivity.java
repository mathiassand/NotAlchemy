package com.example.larsnielsen.notalchemy;import android.graphics.Bitmap;import android.os.Bundle;import android.support.v7.app.AppCompatActivity;import android.view.View;import android.widget.ImageButton;import android.widget.Toast;import static android.R.attr.bitmap;import static java.lang.Boolean.FALSE;import static java.lang.Boolean.TRUE;public class MainActivity extends AppCompatActivity {    static int statuscheck = 0;    Elements[] elementsarray = new Elements[20];    public static String[] nameArray = {"water", "fire", "air", "earth", "steam", "lava", "cloud", "stone", "energy",//8    "metal", "electricity", "computer", "life", "human", "swamp", "mud", "dave", "obsidian", "gunpowder", "dust"};    public static String[] getNameArray() {        return nameArray;    }    //Declaring element objects    //DO THIS USING AN ARRAY OF OBJECTS INSTEAD TO GAIN MASSIVE POINTS, but how to do so when each    //have different names?!?! Processing book page 154.    /*Elements water;    Elements fire;    Elements air;    Elements earth;    Elements steam;    Elements cloud;    Elements lava;    Elements energy;    Elements electricity;    Elements dave;    Elements dust;    Elements mud;    Elements stone;    Elements metal;    Elements computer;    Elements obsidian;    Elements life;    Elements swamp;    Elements gunpowder;    Elements human;*/    private int image;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        //Initiating all of the elements. If this isn't done before the combine button is pressed,        //the program can crash as it doesn't know whether an element is true or false when checking.        Bitmap bitmap = getIntent().getParcelableExtra("steamButton");        ImageButton imageView = (ImageButton) findViewById(R.id.steamButton);        imageView.setImageBitmap(bitmap);        if (savedInstanceState == null) {            image = R.id.cloudButton;        } else {            // if there is a bundle, use the saved image resource (if one is there)            image = savedInstanceState.getInt(String.valueOf(bitmap), R.id.cloudButton);        }        //Declaring objects. The objects declared are the elements that the player starts out with.        for(int i=0; i<elementsarray.length; i++){            elementsarray[i] = new Elements(nameArray[i], FALSE);        }        /*        obsidian = new Elements(18, FALSE);        gunpowder = new Elements(19, FALSE);        dust = new Elements(20, FALSE);*/    }    @Override    public void onSaveInstanceState(Bundle outState) {        // Make sure you save the current image resource        outState.putInt(String.valueOf(bitmap), image);        super.onSaveInstanceState(outState);    }    /*    ImageButton buttonGrid[][] = new ImageButton[5][10];    public void buttonPress(View v) {        for (int i = 0; i < 5; i++) {            for (int j = 0; j < 10; j++) {                String btnID = "R.id.";                switch (i) {                    case 0:                        btnID.concat("one"); break;                }                switch (j) {                }                buttonGrid[i][j] = (ImageButton) findViewById(Integer.parseInt(btnID));            }        }    }    /*    Vi burde overveje at tilføje billederne i MainActivity i stedet for i xml filen, da der kommer    til at være en del billeder. Man kunne evt. lave en array som holder billederne i sig eller    noget.. Eller noget som hedder en LayoutInflater/ViewInflater    */    //How to declare new elements and assign values to them:    //Elements test = new Elements(5, TRUE);    public void combineButton (View v){        if(statuscheck > 2 || statuscheck < 2){            Toast toast = Toast.makeText(getApplicationContext(), "Too many or too few elements selected", Toast.LENGTH_SHORT);            toast.show();        }        else if(elementsarray[1].activation==TRUE && elementsarray[0].activation==TRUE){            ImageButton steamButton = (ImageButton) findViewById(R.id.steamButton);            steamButton.setVisibility(View.VISIBLE);            Toast toast = Toast.makeText(getApplicationContext(), "Congratulations, you've just made Steam", Toast.LENGTH_SHORT);            toast.show();        }        else if(elementsarray[1].activation == TRUE && elementsarray[3].activation==TRUE){            ImageButton lavaButton = (ImageButton) findViewById(R.id.lavaButton);            lavaButton.setVisibility(View.VISIBLE);        }        else if (elementsarray[2].activation == TRUE && elementsarray[4].activation == TRUE){            ImageButton cloudButton = (ImageButton) findViewById(R.id.cloudButton);            cloudButton.setVisibility(View.VISIBLE);        }        else if (elementsarray[3].activation == TRUE && elementsarray[0].activation == TRUE){            ImageButton soilButton = (ImageButton) findViewById(R.id.soilButton);            soilButton.setVisibility(View.VISIBLE);        }        else if (elementsarray[2].activation == TRUE && elementsarray[1].activation==TRUE){            ImageButton energyButton = (ImageButton) findViewById(R.id.energyButton);            energyButton.setVisibility(View.VISIBLE);        }        else if(elementsarray[2].activation == TRUE && elementsarray[5].activation == TRUE){            ImageButton stoneButton = (ImageButton) findViewById(R.id.stoneButton);            stoneButton.setVisibility(View.VISIBLE);        }        else if(elementsarray[7].activation==TRUE && elementsarray[1].activation==TRUE){            ImageButton metalButton = (ImageButton) findViewById(R.id.metalButton);            metalButton.setVisibility(View.VISIBLE);        }        else if (elementsarray[8].activation==TRUE && elementsarray[9].activation==TRUE){            ImageButton electricityButton = (ImageButton) findViewById(R.id.electricityButton);            electricityButton.setVisibility(View.VISIBLE);        }        else if (elementsarray[11].activation == TRUE && elementsarray[13].activation== TRUE){            ImageButton daveButton = (ImageButton) findViewById(R.id.daveButton);            daveButton.setVisibility(View.VISIBLE);        }        else if (elementsarray[5].activation==TRUE && elementsarray[0].activation==TRUE){            ImageButton obsidianButton = (ImageButton) findViewById(R.id.obsidianButton);            obsidianButton.setVisibility(View.VISIBLE);        }        else if (elementsarray[8].activation==TRUE && elementsarray[14].activation == TRUE){            ImageButton lifeButton = (ImageButton) findViewById(R.id.lifeButton);            lifeButton.setVisibility(View.VISIBLE);        }        else if (elementsarray[15].activation == TRUE && elementsarray[3].activation==TRUE){            ImageButton swampButton = (ImageButton) findViewById(R.id.swampButton);            swampButton.setVisibility(View.VISIBLE);        }        else if (elementsarray[3].activation==TRUE && elementsarray[2].activation==TRUE){            ImageButton dustButton = (ImageButton) findViewById(R.id.dustButton);            dustButton.setVisibility(View.VISIBLE);        }        else if (elementsarray[19].activation==TRUE && elementsarray[1].activation==TRUE){            ImageButton gunpowderButton = (ImageButton) findViewById(R.id.gunpowderButton);            gunpowderButton.setVisibility(View.VISIBLE);        }        else if (elementsarray[12].activation==TRUE && elementsarray[3].activation==TRUE){            ImageButton humanButton = (ImageButton) findViewById(R.id.humanButton);            humanButton.setVisibility(View.VISIBLE);        }        else if (elementsarray[10].activation==TRUE && elementsarray[9].activation==TRUE) {            ImageButton computerButton = (ImageButton) findViewById(R.id.laptopButton);            computerButton.setVisibility(View.VISIBLE);        }        else{            Toast invalid = Toast.makeText(getApplicationContext(), "Invalid combination of elements", Toast.LENGTH_SHORT);            invalid.show();        }        reset();    }    public void buttonPress (View v){            switch (v.getId()) {                case R.id.fireButton:                    elementsarray[1].changestate(elementsarray[1].getValue());  //1                    break;                case R.id.waterButton:                    elementsarray[0].changestate(elementsarray[0].getValue()); //0                    break;                case R.id.earthButton:                    elementsarray[3].changestate(elementsarray[3].getValue()); //3                    break;                case R.id.airButton:                    elementsarray[2].changestate(elementsarray[2].getValue()); //2                    break;                case R.id.steamButton:                    elementsarray[4].changestate(elementsarray[4].getValue()); //4                    break;                case R.id.lavaButton:                    elementsarray[5].changestate(elementsarray[5].getValue()); //5                    break;                case R.id.stoneButton:                    elementsarray[7].changestate(elementsarray[7].getValue()); //7                     break;                case R.id.energyButton:                    elementsarray[8].changestate(elementsarray[8].getValue()); //8                    break;                case R.id.metalButton:                    elementsarray[9].changestate(elementsarray[9].getValue()); //9                    break;                case R.id.electricityButton:                    elementsarray[10].changestate(elementsarray[10].getValue()); //10                    break;                case R.id.laptopButton:                    elementsarray[11].changestate(elementsarray[11].getValue()); //11                    break;                case R.id.lifeButton:                    elementsarray[12].changestate(elementsarray[12].getValue()); //12                    break;                case R.id.humanButton:                    elementsarray[13].changestate(elementsarray[13].getValue()); //13                    break;                case R.id.swampButton:                    elementsarray[14].changestate(elementsarray[14].getValue()); //14                    break;                case R.id.soilButton:                    elementsarray[15].changestate(elementsarray[15].getValue()); //15                    break;                case R.id.daveButton:                    elementsarray[16].changestate(elementsarray[16].getValue()); //16                    break;                case R.id.obsidianButton:                    elementsarray[17].changestate(elementsarray[17].getValue()); //17                    break;                case R.id.gunpowderButton:                    elementsarray[18].changestate(elementsarray[18].getValue()); //18                    break;                case R.id.dustButton:                    elementsarray[19].changestate(elementsarray[19].getValue()); //19                    break;                case R.id.cloudButton:                    elementsarray[6].changestate(elementsarray[6].getValue()); //6                    break;            }        }    public void reset(){        for(int i = 0; i < elementsarray.length; i++){            elementsarray[i].activation=FALSE;        }        statuscheck = 0;        //Skriv her kode der ændrer alle objektor til false        /*fire.activation = FALSE;        water.activation = FALSE;        earth.activation = FALSE;        air.activation = FALSE;        lava.activation = FALSE;        stone.activation = FALSE;        cloud.activation = FALSE;        steam.activation = FALSE;        life.activation = FALSE;        mud.activation = FALSE;        swamp.activation = FALSE;        energy.activation = FALSE;        electricity.activation = FALSE;        metal.activation = FALSE;        computer.activation = FALSE;        human.activation = FALSE;        dust.activation = FALSE;        gunpowder.activation = FALSE;        dave.activation = FALSE;        obsidian.activation = FALSE;*/    }}/*playButton = (Button) findViewById(R.id.play);        playButton.setVisibility(1);        playButton.setOnClickListener(new OnClickListener() {@Overridepublic void onClick(View v) {        //when play is clicked show stop button and hide play button        playButton.setVisibility(View.GONE);        stopButton.setVisibility(View.VISIBLE);        }        });*/